<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试学习</title>
      <link href="/2022/12/21/%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/12/21/%E6%B5%8B%E8%AF%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>区块链学习</title>
      <link href="/2022/12/21/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/12/21/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="hyperledger笔记"><a href="#hyperledger笔记" class="headerlink" title="hyperledger笔记"></a>hyperledger笔记</h1><p>第一次su不起作用</p><ul><li>sudo passwd root</li></ul><h4 id="安装mware-tools步骤-："><a href="#安装mware-tools步骤-：" class="headerlink" title="安装mware tools步骤 ："></a>安装mware tools步骤 ：</h4><p>1.下载 </p><p>2.执行sudo ./vmware-tools-distrib/vmware-install.pl</p><p>3.刚安装不起作用，执行sudo apt-get install open-vm-tools-desktop</p><p>4.重启ubuntu</p><p><strong>1.基本命令</strong></p><ul><li><p><strong>解压及其复制</strong></p></li><li><p>sudo tar -zxvf go1.18.1.linux-amd64.tar.gz -C /usr/local/</p></li><li><p>cp -r A路径 B路径  把a复制到b</p></li><li><p><strong>创建目录</strong></p></li><li><p>mkdir -p 递归创建目录</p></li><li></li></ul><p><strong>2.连接xshell</strong> </p><ul><li>安装连接工具   sudo apt-get install <a href="https://so.csdn.net/so/search?q=openssh&spm=1001.2101.3001.7020">openssh</a>-server</li><li>查看安是否成功  sudo ps -e | <a href="https://so.csdn.net/so/search?q=grep&spm=1001.2101.3001.7020">grep</a> ssh  成功 有sshd字样</li><li>启动服务 sudo service <a href="https://so.csdn.net/so/search?q=ssh&spm=1001.2101.3001.7020">ssh</a> start</li></ul><p><strong>4.安装docker</strong>   <a href="https://docs.docker.com/engine/install/ubuntu/">https://docs.docker.com/engine/install/ubuntu/</a></p><ul><li><p>1.</p></li><li><p>加速</p></li><li><p>配置镜像加速器 进入网址 <a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p></li><li><p>执行</p><p>sudo mkdir -p /etc/docker<br>sudo tee /etc/docker/daemon.json &lt;&lt;-‘EOF’<br>{<br>“registry-mirrors”: [“<a href="https://84ffd1by.mirror.aliyuncs.com&quot;]">https://84ffd1by.mirror.aliyuncs.com&quot;]</a><br>}<br>EOF<br>sudo systemctl daemon-reload<br>sudo systemctl restart docker</p></li></ul><p><strong>5.安装docker-compose</strong>   <a href="https://www.jianshu.com/p/843c3d7dc540">https://www.jianshu.com/p/843c3d7dc540</a></p><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>1.安装 vim</p><ul><li>sudo apt-get install vim</li></ul><p>2.安装git </p><ul><li>sudo apt-get install git</li><li>git加速 sudo vim /etc/hosts</li><li>添加140.82.113.3 github.com<br>199.232.69.194 github.global.ssl.fastly.net</li><li>重启sudo service network-manager restart</li></ul><p>3.安装 curl</p><ul><li>sudo apt-get install curl</li></ul><p>4.安装 wget</p><ul><li>sudo apt-get install wget</li></ul><p>5.安装go</p><ul><li><p>官网下载安装包xftp上传到ubuntu</p></li><li><p>卸载旧版本并解压 rm -rf /usr/local/go &amp;&amp; tar -C /usr/local -xzf go1.19.4.linux-amd64.tar.gz</p></li><li><p>添加环境变量 vim /etc/profile</p></li><li><p>export PATH=$PATH:/usr/local/go/bin</p></li><li><p>让缓解生效 source /etc/profile</p></li><li><p>注意：到目前为止只是在当前用户下安装了go环境</p></li><li><p>vim ~/.bashrc 添加 source /etc/profile</p></li><li><p>切换到普通用户su zhao</p></li><li><p>vim ~/.bashrc 添加 source /etc/profile</p></li><li><p>go version查看普通用户是否也有环境了</p></li></ul><p>6.安装docker</p><ul><li><p>设置存储库</p></li><li><p>sudo apt-get update</p></li><li><p>```linux<br>sudo apt-get install <br>   ca-certificates <br>   curl <br>   gnupg <br>   lsb-release</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 添加Docker的官方GPG密钥</span><br><span class="line"></span><br><span class="line">- sudo mkdir -p /etc/apt/keyrings</span><br><span class="line">  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span><br><span class="line"></span><br><span class="line">- 使用以下命令设置稳定储存库</span><br><span class="line"></span><br><span class="line">- ```yaml</span><br><span class="line">  echo \</span><br><span class="line">    &quot;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \</span><br><span class="line">    $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure></li><li><p>安装Docker Engine</p></li><li><p>sudo apt-get update</p></li><li><p>列出所有的docker版本 apt-cache madison docker-ce | awk ‘{ print $3 }’</p></li><li><p>找一个版本安装</p></li><li><p>```<br>VERSION_STRING=5:20.10.13<del>3-0</del>ubuntu-jammy<br>sudo apt-get install docker-ce=$VERSION_STRING docker-ce-cli=$VERSION_STRING containerd.io docker-compose-plugin</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- ```yaml</span><br><span class="line">  docker 加速</span><br><span class="line">  sudo mkdir -p /etc/docker</span><br><span class="line">  sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;registry-mirrors&quot;: [&quot;https://f2egzf7i.mirror.aliyuncs.com&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">  EOF</span><br><span class="line">  sudo systemctl daemon-reload</span><br><span class="line">  sudo systemctl restart docker</span><br></pre></td></tr></table></figure></li></ul><p>7.安装docker-compose</p><p>1.下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.sudo chmod +x /usr/local/bin/docker-compose</p>]]></content>
      
      
      <categories>
          
          <category> 区块链 </category>
          
          <category> fabric </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blockchain </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go语言学习</title>
      <link href="/2022/12/21/go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/12/21/go%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">&quot;fmt&quot;</span></span><br><span class="line">   <span class="string">&quot;github.com/aliyun/aliyun-oss-go-sdk/oss&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">   <span class="comment">//创建一个实例</span></span><br><span class="line">   client, err := oss.New(<span class="string">&quot;https://oss-cn-hangzhou.aliyuncs.com&quot;</span>, <span class="string">&quot;LTAI5tQ8EipmHpVqZvx58tWt&quot;</span>, <span class="string">&quot;XjfYjwYzV3MOFyLF64YTi719mtBDRW&quot;</span>)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      fmt.Println(<span class="string">&quot;创建一个实例出错了&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//获取存储空间列表</span></span><br><span class="line">   <span class="comment">//lsRes, err := client.ListBuckets()</span></span><br><span class="line">   <span class="comment">//if err != nil &#123;</span></span><br><span class="line">   <span class="comment">// fmt.Println(&quot;获取bucket列表出错了1&quot;)</span></span><br><span class="line">   <span class="comment">//&#125;</span></span><br><span class="line">   <span class="comment">//for _, bucket := range lsRes.Buckets &#123;</span></span><br><span class="line">   <span class="comment">// fmt.Println(&quot;Buckets:&quot;, bucket.Name)</span></span><br><span class="line">   <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//创建存储空间</span></span><br><span class="line">   <span class="comment">//err = client.CreateBucket(&quot;my-bucket132432411&quot;)</span></span><br><span class="line">   <span class="comment">//if err != nil &#123;</span></span><br><span class="line">   <span class="comment">// fmt.Println(&quot;出错了1&quot;)</span></span><br><span class="line">   <span class="comment">//&#125;</span></span><br><span class="line">   <span class="comment">//删除存储空间</span></span><br><span class="line">   <span class="comment">//err = client.DeleteBucket(&quot;my-bucket132432411&quot;)</span></span><br><span class="line">   <span class="comment">//if err != nil &#123;</span></span><br><span class="line">   <span class="comment">// fmt.Println(&quot;出错了1&quot;)</span></span><br><span class="line">   <span class="comment">//&#125;</span></span><br><span class="line">   bucket, err := client.Bucket(<span class="string">&quot;zhaowei-0452&quot;</span>)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      fmt.Println(<span class="string">&quot;出错了1&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//文件上传</span></span><br><span class="line">   err = bucket.PutObjectFromFile(<span class="string">&quot;pictures/111.jpg&quot;</span>, <span class="string">&quot;C:\\Users\\Administrator\\Desktop\\111.jpg&quot;</span>)</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      fmt.Println(<span class="string">&quot;出错了11&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//下载文件</span></span><br><span class="line">   <span class="comment">//err = bucket.GetObjectToFile(&quot;pictures/111.jpg&quot;, &quot;C:\\Users\\Administrator\\Desktop\\学习笔记\\111.jpg&quot;)</span></span><br><span class="line">   <span class="comment">//if err != nil &#123;</span></span><br><span class="line">   <span class="comment">// fmt.Println(&quot;出错了111&quot;)</span></span><br><span class="line">   <span class="comment">//&#125;</span></span><br><span class="line">   <span class="comment">//删除文件</span></span><br><span class="line">   <span class="comment">//err = bucket.DeleteObject(&quot;pictures/111.jpg&quot;)</span></span><br><span class="line">   <span class="comment">//if err != nil &#123;</span></span><br><span class="line">   <span class="comment">// fmt.Println(&quot;删除出错了11&quot;)</span></span><br><span class="line">   <span class="comment">//&#125;</span></span><br><span class="line">   <span class="comment">//文件列表</span></span><br><span class="line">   lsRes, err := bucket.ListObjects()</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      fmt.Println(<span class="string">&quot;文件列表获取出错了11&quot;</span>)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> _, object := <span class="keyword">range</span> lsRes.Objects &#123;</span><br><span class="line">      fmt.Println(<span class="string">&quot;Objects:&quot;</span>, object.Key)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/12/20/hello-world/"/>
      <url>/2022/12/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
